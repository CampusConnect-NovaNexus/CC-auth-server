services:
  # Authentication Service
  auth-server:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: campus-connect-auth
    env_file:
      - ./.env
    environment:
      - GRPC_HOST=0.0.0.0
      - REDIS_URL=redis://redis:6379
    ports:
      - "3500:3500"
      - "50053:50053"
    networks:
      - campus-connect-network
    restart: unless-stopped
    depends_on:
      - redis



  # Lost and Found Service
  lostfound-service:
    build:
      context: ../CC-lost-found-backend
      dockerfile: Dockerfile
    container_name: campus-connect-lostfound
    env_file:
      - ../CC-lost-found-backend/.env
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - GRPC_SERVER=0.0.0.0:50052
      - AUTH_GRPC_SERVER=auth-server:50053
      - REDIS_URL=redis://redis:6379
    ports:
      - "2000:2000"
      - "50052:50052"
    networks:
      - campus-connect-network
    restart: unless-stopped
    depends_on:
      - redis
      
  # Forum Service
  forum-service:
    build:
      context: ../CC-Forum-backend
      dockerfile: Dockerfile
    container_name: campus-connect-forum
    env_file:
      - ../CC-Forum-backend/.env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - JWT_SECRET_KEY=secret_key_for_authentication_service
      - AUTH_GRPC_SERVER=auth-server:50053
      - REDIS_URL=redis://redis:6379
    ports:
      - "3000:3000"
    networks:
      - campus-connect-network
    restart: unless-stopped
    depends_on:
      - redis
      - auth-server
      
  # Grievance Service
  grievance-service:
    build:
      context: ../CC-Grievance-backend
      dockerfile: Dockerfile
    container_name: campus-connect-grievance
    env_file:
      - ../CC-Grievance-backend/.env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - JWT_SECRET_KEY=secret_key_for_authentication_service
      - AUTH_GRPC_SERVER=auth-server:50053
      - REDIS_URL=redis://redis:6379
    ports:
      - "4000:4000"
    networks:
      - campus-connect-network
    restart: unless-stopped
    depends_on:
      - redis
      - auth-server
      
  # LMS Service
  lms-service:
    build:
      context: ../CC-LMS-backend
      dockerfile: Dockerfile
    container_name: campus-connect-lms
    env_file:
      - ../CC-LMS-backend/.env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - JWT_SECRET_KEY=secret_key_for_authentication_service
      - AUTH_GRPC_SERVER=auth-server:50053
      - REDIS_URL=redis://redis:6379
    ports:
      - "5000:5000"
    networks:
      - campus-connect-network
    restart: unless-stopped
    depends_on:
      - redis
      - auth-server
      
  # Teacher Service
  teacher-service:
    build:
      context: ../CC-Teacher-backend
      dockerfile: Dockerfile
    container_name: campus-connect-teacher
    env_file:
      - ../CC-Teacher-backend/.env
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - JWT_SECRET_KEY=secret_key_for_authentication_service
      - AUTH_GRPC_SERVER=auth-server:50053
      - REDIS_URL=redis://redis:6379
      - PORT=8000
    ports:
      - "8000:8000"
    networks:
      - campus-connect-network
    restart: unless-stopped
    depends_on:
      - redis
      - auth-server

  # Redis Service
  redis:
    image: redis:alpine
    container_name: campus-connect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - campus-connect-network
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  campus-connect-network:
    driver: bridge

volumes:
  redis-data:
